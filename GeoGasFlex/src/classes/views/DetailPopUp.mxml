<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="400" height="334" creationComplete="init()" currentState="State1"
		 >
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	<s:states>
		<s:State name="State1"/>
		<s:State name="ANP"/>
		<s:State name="loggedFacebook"/>
	</s:states>
	<fx:Declarations>

	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import classes.Constants;
			import classes.events.FacebookEvent;
			
			import classes.model.Entidade;
			import classes.model.Tesaurus;
			
			import com.google.maps.controls.NavigationControl;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.containers.Form;
			import mx.containers.FormItem;
			import mx.controls.Alert;
			import mx.controls.DataGrid;
			import mx.controls.HorizontalList;
			import mx.controls.TextInput;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.components.NavigatorContent;
			import spark.components.Scroller;
			import spark.components.VGroup;
			
			import utils.FacebookConnection;
			
			private var dic:Tesaurus;
			private var ent:Entidade;
			
			private var fb:FacebookConnection;
			
			[Bindable]
			private var cnpjcpfStr:String;
			[Bindable]
			private var autorizacaoStr:String;
			[Bindable]
			private var razaoSocialStr:String;
			[Bindable]
			private var despachoStr:String;
			[Bindable]
			private var bandeiraStr:String;
			[Bindable]
			private var nomeFantasiaStr:String;
			[Bindable]
			private var denunciasStr:String;
			[Bindable]
			private var autuacoesStr:String;
			
			public function init():void {
				fb = FacebookConnection.getInstance();
//				if(fb.connected) {
//					currentState="loggedFacebook";
//				} else {
//					currentState="State1";
//				}
				fb.addEventListener(FacebookEvent.FACEBOOK_CONNECTED, loginHandler);
				fb.addEventListener(FacebookEvent.FACEBOOK_DISCONNECTED, logoutHandler);
			}
			
			protected function loginHandler(ev:Event):void
			{
				currentState="loggedFacebook";
			}
			
			protected function logoutHandler(ev:Event):void{
				currentState="State1";
			}
			
			public function setVariables(entity:Entidade,dict:Tesaurus):void{
				this.dic = dict;
				this.ent = entity;
				
				this.autorizacaoStr = ent.autorizacao;
				this.cnpjcpfStr = ent.cnpjcpf;
				this.razaoSocialStr = ent.razaosocial;
				this.despachoStr = ent.numerodespacho;
				this.bandeiraStr = ent.bandeira;
				this.nomeFantasiaStr = ent.getLabel();
				this.autuacoesStr = ent.autuacoes?ent.autuacoes.toString():"--";
				this.denunciasStr = ent.denuncias?ent.denuncias.toString():"--";
			}
			
			private function close():void{
				PopUpManager.removePopUp(this);
			}
			
			private function ro_faultHandler(e:FaultEvent):void{
				Alert.show("Problema ao resgatar informações dessa entidade.");
			}
			
			protected function submeter():void {
				fb.addEventListener(FacebookEvent.FACEBOOK_POSTED, postHandler);
				var comment:String = "";
				if(commentArea.text != "") {
					comment += "\"" + commentArea.text + "\""; 
				}
				var text:String;
				if(comment != "") {
					text = "Avaliei o posto " + this.ent.nomefantasia + " com nota " + rating.value + " pelo GeoGas: " + comment + " - Visite você também!";
				} else {
					text = "Avaliei o posto " + this.ent.nomefantasia + " com nota " + rating.value + " pelo GeoGas. Visite você também!";
				}
				
				fb.submitPost(text);
			}
			
			protected function postHandler(ev:Event):void {
				fb.removeEventListener(FacebookEvent.FACEBOOK_POSTED, postHandler);
				Alert.show("Avaliação foi publicada. Obrigado!");
				close();
			}
		]]>
	</fx:Script>
	<s:TitleWindow width="100%" height="100%" borderVisible="false" close="close()" >
		<mx:TabNavigator id="tabBar" width="100%" height="100%" borderVisible="false">
			<s:NavigatorContent label="Informações Gerais" id="info" width="100%" height="100%">
				<s:Label x="21" y="40" width="99" height="22" fontSize="15" text="Autorização:"
						 textAlign="right"
						 />
				<s:Label x="34" y="70" width="86" height="22" fontSize="15" text="CNPJ/CPF:"
						 textAlign="right"
						 />
				<s:Label x="11" y="11" width="109" height="22" fontSize="15" text="Nome:"
						 textAlign="right"
						 />
				<s:Label x="43" y="160" width="77" height="22" fontSize="15" text="Denúncias:"
						 textAlign="right"
						 />
				<s:Label x="38" y="197" width="82" height="29" fontSize="15" text="Autuações:"
						 textAlign="right"
						 />
				<s:Label x="50" y="132" width="71" height="20" fontSize="15" text="Bandeira:"
						 textAlign="right"
						/>
				<s:Label x="38" y="100" width="86" height="25" fontSize="15" text="Despacho:"
						 textAlign="right"
						 />
				<s:TextInput x="128" y="70" editable.State1="false" editable.loggedFacebook="false" editable.ANP="true"
							 text="{this.cnpjcpfStr}"
							 />
				<s:TextInput x="128" y="100" editable.State1="false" editable.loggedFacebook="false" editable.ANP="true" text="{this.despachoStr}"/>
				<s:TextInput x="128" y="130" editable.State1="false" editable.loggedFacebook="false" editable.ANP="true" text="{this.bandeiraStr}"/>
				<s:TextInput x="128" y="11" editable.State1="false" editable.loggedFacebook="false" editable.ANP="true"
							 text="{this.nomeFantasiaStr}"
							 />
				<s:TextInput x="128" y="160" width="40" height="30" editable="false"
							 text="{this.denunciasStr}"
							 />
				<s:TextInput x="128" y="198" width="40" height="28" editable="false"
							 text="{this.autuacoesStr}"
							 />
				<s:TextInput x="128" y="40" editable.State1="false" editable.loggedFacebook="false" editable.ANP="true"
							 text="{this.autorizacaoStr}"
							/>
				<s:Button includeIn="ANP" x="224" y="204" height="22" label="Save"/>
				<s:Image x="176" y="196" width="40"
						 source="{Constants.SERVER_AD+'/geogas/imgs/autuacao.jpg'}"
						 />
				<s:Image x="176" y="160" width="40"
						 source="{Constants.SERVER_AD+'/geogas/imgs/denuncia.jpg'}"
						 />
				
			</s:NavigatorContent>
			<s:NavigatorContent label="Avaliação" width="100%" height="100%" includeIn="loggedFacebook,ANP">
				<s:HSlider x="98" y="149" minimum="0" maximum="10" value="5" id="rating" width="198" height="10"  includeIn="loggedFacebook"/>
				<s:Label x="10" y="121" text="Nota:" fontSize="14" width="41" height="17" includeIn="loggedFacebook"/>
				<s:Label x="9" y="3" text="Comentário:" includeIn="loggedFacebook"/>
				<s:TextArea x="10" y="23" height="85" width="380" id="commentArea" includeIn="loggedFacebook"/>
				<s:Button x="315" y="188" label="Submeter" id="submitEvaluation" includeIn="loggedFacebook" click="submeter()"/>
				<s:Label x="97" y="132" text="0                                                          10" width="200" includeIn="loggedFacebook"/>
			</s:NavigatorContent>
		</mx:TabNavigator>
	</s:TitleWindow>
</s:Group>
